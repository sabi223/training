#Q.1- Create a class Animal as a base class and define method animal_attribute. Create another class Tiger which is inheriting Animal and access the base class method.
class animal:
    def animal_attribute(self):
        print('animal attribute')


class tiger(animal):
    pass

x=tiger()
x.animal_attribute();


Q.2- What will be the output of following code.

class A:
    def f(self):
        return self.g()

    def g(self):
        return 'A'

class B(A):
    def g(self):
        return 'B'

a = A()
b = B()
print a.f(), b.f()
print a.g(), b.g()
# ans is A B
A B

#Q3
class cop:


    def add(self,name,age,workexperience,desigantion):
        self.name=name
        self.age=age
        self.workexperience=workexperience
        self.desigantion=desigantion

    def display(self):
        print(self.name)
        print(self.age)
        print( self.workexperience)
        print(self.desigantion)



x=cop()
x.add('sabi',22,5,'manager')
x.display()

class mission(cop):
    def addmission(self):
        pass

a=mission()
a.addmission()

#Q.4- Create a class Shape.Initialize it with length and breadth Create the method Area. Create class rectangle and square which inherits shape and access the method Area.
class shapes:
    def __init__(self, lenght, breadth):
        self.lenght = lenght
        self.breadth = breadth

    def area(self):
        print(self.lenght * self.breadth)


class rectangle(shapes):
    pass


class square(shapes):
    pass


a = rectangle(10, 20)
a.area()
b=square(10, 10)
b.area()
